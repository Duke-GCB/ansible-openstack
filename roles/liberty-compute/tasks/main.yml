---
################
# Dependencies #
################
- name: install compute node dependencies
  apt: name={{ item }} state=present
  with_items: NOVA_COMPUTE_CONFIG.packages
  tags:
    - install

- name: enable 8021q kernel module
  modprobe: name=8021q state=present
  tags:
    - kernel
    - modprobe

- name: change sysctl for neutron
  sysctl: name="{{ item.name }}" value="{{ item.option }}" state=present reload=yes
  with_items: NOVA_COMPUTE_CONFIG.sysctl_modules
  tags:
    - sysctl
    - networking

################
# Nova Compute #
################
- name: template nova.conf
  template: src="{{ NOVA_COMPUTE_CONFIG.nova_conf.template }}" dest="{{ NOVA_COMPUTE_CONFIG.nova_conf.dest }}" backup=yes
  tags:
    - nova
    - compute
    - template
    - config

- name: template nova-compute.conf
  template: src="{{ NOVA_COMPUTE_CONFIG.nova_compute_conf.template }}" dest="{{ NOVA_COMPUTE_CONFIG.nova_compute_conf.dest }}" backup=yes
  tags:
    - nova
    - compute
    - template
    - config

###########
# Neutron #
###########
- name: template neutron.conf
  template: src="{{ NOVA_COMPUTE_CONFIG.neutron_conf.template }}" dest="{{ NOVA_COMPUTE_CONFIG.neutron_conf.dest }}" backup=yes
  tags:
    - neutron
    - template
    - config

- name: template ml2_conf.ini.j2
  template: src="{{ NOVA_COMPUTE_CONFIG.ml2_conf_ini.template }}" dest="{{ NOVA_COMPUTE_CONFIG.ml2_conf_ini.dest }}" backup=yes
  tags:
    - nova
    - compute
    - template
    - config

- name: template l3_agent.ini
  template: src="{{ NOVA_COMPUTE_CONFIG.l3_agent_ini.template }}" dest="{{ NOVA_COMPUTE_CONFIG.l3_agent_ini.dest }}" backup=yes
  tags:
    - neutron
    - template
    - config

- name: template metadata_agent.ini
  template: src="{{ NOVA_COMPUTE_CONFIG.metadata_agent_ini.template }}" dest="{{ NOVA_COMPUTE_CONFIG.metadata_agent_ini.dest }}" backup=yes
  tags:
    - neutron
    - template
    - config

- name: template openvswitch_agent.ini.j2
  template: src="{{ NOVA_COMPUTE_CONFIG.openvswitch_agent_ini.template }}" dest="{{ NOVA_COMPUTE_CONFIG.openvswitch_agent_ini.dest }}" backup=yes
  tags:
    - nova
    - compute
    - template
    - config

########################
# Virtualization Check #
########################
- name: run command to check if cpu supports hardware acceleration
  shell: egrep -c '(vmx|svm)' /proc/cpuinfo
  register: cpu_hw_acc
  tags:
    - cpu
    - vm

- name: determine whether or not the compute node supports hardware acceleration for virtual machines
  fail: msg="Setup cannot continue. This machine does not support virtualization (hardware acceleration is not available on the current chipset).  Therefore one must use QEMU instead of KVM"
  when: cpu_hw_acc < 1
  tags:
    - cpu
    - vm

- name: run command to check if virtualization flag is enabled
  shell: /usr/sbin/kvm-ok | /bin/grep 'disabled'
  ignore_errors: yes
  register: virtualization_flag
  tags:
    - cpu
    - vm
    - virtualization

- name: determine whether or not the compute node has virtualization enabled in the BIOS
  fail: msg="Setup cannot continue. Virtualization is not turned on in the bios."
  when: virtualization_flag.stdout != ""
  tags:
    - cpu
    - vm
    - virtualization

#########################
# Configure OVS Bridges #
#########################
- name: load openvswitch module 
  modprobe: name=openvswitch state=present
  tags:
    - ovs

- name: ensure openvswitch is running
  service: name=openvswitch-switch state=started
  tags:
    - ovs

- name: create all bridges
  openvswitch_bridge: bridge="{{ item.value.bridge }}" state=present
  with_dict: "{{ NEUTRON_CONFIG.interfaces }}"
  tags:
    - ovs

- name: create the ports on all bridges
  openvswitch_port: bridge="{{ item.value.bridge }}" port="{{ item.value.port }}" state=present
  with_dict: "{{ NEUTRON_CONFIG.interfaces }}" 
  tags:
    - ovs

###########################
# Bring all interfaces UP #
###########################

- name: bring up physical bridge interfaces
  shell: ip link set up {{ item.value.port }}
  with_dict: NEUTRON_CONFIG.interfaces
  tags:
    - ovs

- name: bring up ovs bridge interfaces
  shell: ip link set up {{ item.value.bridge }}
  with_dict: NEUTRON_CONFIG.interfaces
  tags:
    - ovs

- name: remove /var/lib/nova/nova.sqlite
  file: path=/var/lib/nova/nova.sqlite state=absent
  tags:
    - cleanup

- name: restart neutron services
  service: name={{ item }} state=restarted enabled=yes
  with_items: NOVA_COMPUTE_CONFIG.services
  tags:
    - neutron-service-restart
